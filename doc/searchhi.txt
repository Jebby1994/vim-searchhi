*searchhi.txt*	Plugin for highlighting the current search result
*searchhi*

==============================================================================
CONTENTS                                                   *searchhi-contents*

    1. Intro .......................................... |searchhi-intro|
        1.1. Credits .................................. |searchhi-credits|
    2. Features ....................................... |searchhi-features|
    3. Quick start .................................... |searchhi-quick-start|
    4. Config ......................................... |searchhi-config|
        4.1. Highlight ................................ |searchhi-highlight|
        4.2. Autocommands ............................. |searchhi-autocmds|
        4.3. Options .................................. |searchhi-options|
    5. Mappings ....................................... |searchhi-mappings|
        5.1. Normal mode .............................. |searchhi-n-mappings|
        5.2. Visual mode .............................. |searchhi-v-mappings|

==============================================================================
1. Intro                                                      *searchhi-intro*

This plugin does primarily one thing: highlight the current search result (the
one under the cursor) in a different style than the others.

------------------------------------------------------------------------------
1.1. Credits                                                *searchhi-credits*

This plugin uses code from the following sources:

Plugin: {vim-searchant}{1}
Author: Tim Schumacher <tim@timakro.de>

    - |searchhi| would not have existed without {vim-searchant}{1}. It uses
      the same basic implementation for highlighting the current search
      result.

                                  {1} https://github.com/timakro/vim-searchant

==============================================================================
2. Features                                                *searchhi-features*

    - Smooth integration with standard search as well as other
      search-enhancing plugins (e.g. {vim-anzu}{2}, {vim-asterisk}{3}).

    - Behaves appropriately in Visual mode.

    - Highlighting is updated predictably when the cursor is moved, as well as
      when switching buffers and windows. It can also automatically be turned
      off with custom autocommands.

    - User autocommands are provided and executed when highlighting is turned
      on and off.

                                {2} https://github.com/osyo-manga/vim-anzu
                                {3} https://github.com/haya14busa/vim-asterisk


==============================================================================
3. Quick start                                          *searchhi-quick-start*

>
    nmap n <Plug>(searchhi-n)
    nmap N <Plug>(searchhi-N)
    nmap * <Plug>(searchhi-*)
    nmap g* <Plug>(searchhi-g*)
    nmap # <Plug>(searchhi-#)
    nmap g# <Plug>(searchhi-g#)
    nmap gd <Plug>(searchhi-gd)
    nmap gD <Plug>(searchhi-gD)

    vmap n <Plug>(searchhi-v-n)
    vmap N <Plug>(searchhi-v-N)
    vmap * <Plug>(searchhi-v-*)
    vmap g* <Plug>(searchhi-v-g*)
    vmap # <Plug>(searchhi-v-#)
    vmap g# <Plug>(searchhi-v-g#)
    vmap gd <Plug>(searchhi-v-gd)
    vmap gD <Plug>(searchhi-v-gD)

    nmap <silent> <C-L> <Plug>(searchhi-clear-all)
    vmap <silent> <C-L> <Plug>(searchhi-v-clear-all)
<

Integration with {vim-anzu}{2}:
>
    let g:searchhi_user_autocmds_enabled = 1
    augroup searchhi
        autocmd!

        " The redraw fixes an issue with the search status immediately being
        " cleared when the viewport scrolls
        autocmd User SearchHiOn redraw | AnzuUpdateSearchStatusOutput

        autocmd User SearchHiOff echo g:anzu_no_match_word
    augroup END
<

Integration with {vim-asterisk}{3}:
>
    map * <Plug>(asterisk-*)<Plug>(searchhi-update)<Plug>(searchhi-listen)
    map # <Plug>(asterisk-#)<Plug>(searchhi-update)<Plug>(searchhi-listen)
    map g* <Plug>(asterisk-g*)<Plug>(searchhi-update)<Plug>(searchhi-listen)
    map g# <Plug>(asterisk-g#)<Plug>(searchhi-update)<Plug>(searchhi-listen)

    map z* <Plug>(asterisk-z*)<Plug>(searchhi-update)<Plug>(searchhi-listen)
    map z# <Plug>(asterisk-z#)<Plug>(searchhi-update)<Plug>(searchhi-listen)
    map gz* <Plug>(asterisk-gz*)<Plug>(searchhi-update)<Plug>(searchhi-listen)
    map gz# <Plug>(asterisk-gz#)<Plug>(searchhi-update)<Plug>(searchhi-listen)
<

==============================================================================
4. Config                                                    *searchhi-config*

------------------------------------------------------------------------------
4.1. Highlight                                            *searchhi-highlight*

*hl-CurrentSearch* is used to highlight current search result. Example:
>
    highlight CurrentSearch
        \ cterm=reverse,bold ctermfg=108 ctermbg=235
        \ gui=reverse,bold guifg=#8ec07c guibg=#282828
<

By default,|hl-CurrentSearch| is linked to |hl-Incsearch|, which works nicely
if |hl-Incsearch| and |hl-Search| are distinguishable.

------------------------------------------------------------------------------
4.2. Autocommands                                          *searchhi-autocmds*

Name           Trigger ~
*SearchHiOn*     When highlighting is turned on
*SearchHiOff*    When highlighting is turned off

Below is an example that blinks the cursor when search highlighting is turned
on, making the cursor easier to find. {vim-anzu}{2} is also used to echo the
search count.
>
    let g:searchhi_user_autocmds_enabled = 1

    augroup searchhi
        autocmd!

        autocmd User SearchHiOn
            \ set guicursor=
                \c-sm:block,i-ci-ve:ver25,r-cr-o:hor20,
                \n-v:block-blinkwait20-blinkon20-blinkoff20 |
            \ redraw | AnzuUpdateSearchStatusOutput

        autocmd User SearchHiOff set guicursor& | echo g:anzu_no_match_word
    augroup END
<

------------------------------------------------------------------------------
4.3. Misc                                               *searchhi-config-misc*

*g:searchhi_user_autocmds_enabled*
    Whether |SearchHiOn| and |SearchHiOff| are executed.
    `---`
    Type: |Number|
    Default: `0`

*g:searchhi_clear_all_autocmds*
    |autocmd-events| separated by commas (no spaces) that will clear all
    search highlighting.

    Note: This uses a hack that runs `set nohlsearch`, because using the
    command |nohlsearch| does not work in scripts.

    `---`
    Type: |String|
    Default: `''`
    Example:
>
    let g:searchhi_clear_all_autocmds = 'InsertEnter'
<

*g:searchhi_open_folds*
    Whether folds should be automatically opened if they contain the current
    search result.
    `---`
    Type: |Number|
    Default: `1`

*g:searchhi_visual_maps_enabled*
    Whether <Plug> mappings should be created for Visual mode functions.
    `---`
    Type: |Number|
    Default: `1`

==============================================================================
5. Mappings                                                *searchhi-mappings*

------------------------------------------------------------------------------
5.1. Normal mode                                         *searchhi-n-mappings*

Standard <Plug> mappings that can replace their respective normal mode
commands:

    *<Plug>(searchhi-n)*
    *<Plug>(searchhi-N)*
    *<Plug>(searchhi-star)*  -> <Plug>(searchhi-*)
    *<Plug>(searchhi-#)*
    *<Plug>(searchhi-gstar)* -> <Plug>(searchhi-g*)
    *<Plug>(searchhi-g#)*
    *<Plug>(searchhi-gd)*
    *<Plug>(searchhi-gD)*

General use <Plug> mappings:

    *<Plug>(searchhi-clear-all)*
        Clear all search highlighting.

Low-level <Plug> mappings (can be used to integrate with other plugins):

    *<Plug>(searchhi-listen)*
        Start listening for any events (e.g. `CursorMoved`, `WinLeave`) that
        might update the current search result.

    *<Plug>(searchhi-await)*
        Waits for events that will start search highlighting. This essentially
        turns off |<Plug>(searchhi-listen)|, and should be called when search
        highlighting is turned off.

    *<Plug>(searchhi-update)*
        If the cursor is over a search result, highlight it and call the
        appropriate |searchhi-autocmds|. This turns on
        |<Plug>(searchhi-listen)| if it's not already on.

    *<Plug>(searchhi-clear)*
        Clears the highlight on the current search result, but not the
        highlights on the rest of them.

        Note: this doesn't mean that the current search result will not be
        highlighted at all. Instead, it will be highlighted with the same
        highlight group as the other search results (i.e. |hl-Search|).

------------------------------------------------------------------------------
5.2. Visual mode                                         *searchhi-v-mappings*

These are the same as the normal mode mappings, but they preserve the visual
selection:

    *<Plug>(searchhi-v-n)*
    *<Plug>(searchhi-v-N)*
    *<Plug>(searchhi-v-star)*  -> <Plug>(searchhi-v-*)
    *<Plug>(searchhi-v-#)*
    *<Plug>(searchhi-v-gstar)* -> <Plug>(searchhi-v-g*)
    *<Plug>(searchhi-v-g#)*
    *<Plug>(searchhi-v-gd)*
    *<Plug>(searchhi-v-gD)*

    *<Plug>(searchhi-v-clear-all)*

    *<Plug>(searchhi-v-listen)*
    *<Plug>(searchhi-v-await)*
    *<Plug>(searchhi-v-update)*
    *<Plug>(searchhi-v-clear)*

 vim:tw=78:sw=4:ft=help:norl:
